const Notification = require('../models/notification.model');
const { getIO } = require('../sockets/socket'); // ‚úÖ Corregido para obtener `getIO()`

// üìå Obtener las notificaciones de un usuario
exports.getUserNotifications = async (req, res) => {
    const user_id = req.user.id;

    try {
        const notifications = await Notification.getUserNotifications(user_id);
        res.json(notifications);
    } catch (error) {
        console.error("‚ùå Error al obtener notificaciones:", error);
        res.status(500).json({ error: "Error interno al obtener notificaciones." });
    }
};

// üìå Marcar una notificaci√≥n como le√≠da
exports.markNotificationAsRead = async (req, res) => {
    const { id } = req.params;

    try {
        await Notification.markAsRead(id);
        res.json({ message: '‚úÖ Notificaci√≥n marcada como le√≠da' });
    } catch (error) {
        console.error("‚ùå Error al marcar la notificaci√≥n como le√≠da:", error);
        res.status(500).json({ error: "Error interno al marcar la notificaci√≥n." });
    }
};

// üìå Crear una notificaci√≥n para un usuario espec√≠fico
exports.createNotification = async (userId, title, message) => {
    try {
        const notificationId = await Notification.create(userId, title, message);
        
        // üîî Emitir notificaci√≥n en tiempo real con Socket.io
        const io = getIO();
        io.to(`user-${userId}`).emit("receiveNotification", {
            id: notificationId,
            title,
            message,
            read: false
        });

        console.log(`üì¢ Notificaci√≥n enviada a usuario ${userId}: ${title}`);
    } catch (error) {
        console.error("‚ùå Error al crear notificaci√≥n:", error);
    }
};

// üìå Enviar una notificaci√≥n p√∫blica a todos los usuarios
exports.sendPublicNotification = async (req, res) => {
    try {
        const { title, message } = req.body;

        if (!title || !message) {
            return res.status(400).json({ error: "T√≠tulo y mensaje son requeridos." });
        }

        // üìå Guardar notificaci√≥n en la base de datos para todos los usuarios
        const newNotification = await Notification.createPublicNotification(title, message);

        // üìå Emitir notificaci√≥n a todos los usuarios conectados
        const io = getIO();
        io.emit("receiveNotification", { title, message });

        console.log("üì¢ Notificaci√≥n p√∫blica enviada a todos los usuarios:", { title, message });

        res.status(201).json({ success: true, message: "Notificaci√≥n enviada a todos los usuarios.", notification: newNotification });
    } catch (error) {
        console.error("‚ùå Error al enviar notificaci√≥n p√∫blica:", error);
        res.status(500).json({ error: "Error interno del servidor." });
    }
};
